#!/usr/bin/env sh
set -e

case $1 in
-completion)
  cat <<\EOT
_kubectl_use() {
  local cur prev opts
  case "${COMP_LINE}" in
  kubectl\ use\ * | kubectl-use\ *)
    kubectl config get-contexts -o name
    kubectl get ns -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}'
    return
    ;;
  esac
  if command -v __start_kubectl >/dev/null; then
    __start_kubectl
  fi
}
complete -F _kubectl_use kubectl kubectl-use
EOT
  exit 0
  ;;
-bash-completion)
  cat <<\EOT
_kubectl_use() {
  local cur="$2"
  local previous="$3"

  case "${COMP_LINE}" in
    kubectl\ use\ *)
      nword=$(($COMP_CWORD - 1))
      ;;
    kubectl-use\ *)
      nword=$COMP_CWORD
      ;;
    *) return ;;
  esac

  candidates=()
  case $nword in
    1)
      candidates+=( $(kubectl config get-contexts -o name 2>/dev/null ) )
      candidates+=( $(kubectl get ns -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}' 2>/dev/null ) )
      ;;
    2)
      candidates+=( $(kubectl --context=$previous get ns -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}' 2>/dev/null ) )
      ;;
    *) return ;;
  esac

  COMPREPLY=()
  for candidate in ${candidates[@]}; do
    if [[ "$candidate" == "$cur"* ]]; then
      COMPREPLY+=("$candidate")
    fi
  done
}
complete -F _kubectl_use kubectl kubectl-use
EOT
  exit 0
  ;;
-* | "")
  echo
  echo "  Completion:"
  echo "    source <(kubectl use -completion)"
  echo "    source <(kubectl use -bash-completion)"
  echo
  echo "  Usage:"
  echo "    kubectl use <namespace>"
  echo "    kubectl use <context>"
  echo "    kubectl use <context> <namespace>"
  echo
  exit 1
  ;;
esac

for context in $(kubectl config get-contexts -o name); do
  if [ "$1" = "$context" ]; then
    new_context="$1"
    break
  fi
done

if [ -n "$new_context" ]; then
  kubectl config use "$1"
  if [ -n "$2" ]; then
    new_namespace="$2"
  fi
else
  if [ -n "$2" ]; then
    echo "Can not swith context \"$1\"."
    exit 1
  fi
  new_namespace="$1"
fi

if [ -n "$new_namespace" ]; then
  kubectl config set-context --current --namespace="$new_namespace" >/dev/null
  echo "Switched to namespace \"$new_namespace\"."
fi
